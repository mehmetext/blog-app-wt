// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String @id @default(cuid())
  name           String
  email          String @unique
  hashedPassword String
  role           Role   @default(USER)

  Post Post[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

enum Role {
  USER
  ADMIN
}

model Category {
  id   String @id @default(cuid())
  name String
  slug String @unique

  posts Post[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Post {
  id         String  @id @default(cuid())
  title      String
  content    String
  slug       String  @unique
  coverImage String
  isFeatured Boolean @default(false)

  authorId   String
  author     User      @relation(fields: [authorId], references: [id])
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String
  comments   Comment[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Comment {
  id         String        @id @default(cuid())
  content    String
  postId     String
  authorName String?
  status     CommentStatus @default(PENDING)

  post Post @relation(fields: [postId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

enum CommentStatus {
  PENDING
  APPROVED
  REJECTED
}
